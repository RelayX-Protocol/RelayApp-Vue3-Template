//Self-Service contact
//const  serviceKey = import.meta.env.VITE_API_SERVICEKEY

const serviceKey = import.meta.env.VITE_API_SERVICEKEY

/**
 * Represents a single field definition in a form or message configuration.
 */
type FieldType = {
  label: string;         // The display label for the field
  value: any;            // The current or default value of the field
  type: string;          // The type of the field (e.g., "text", "number", "date", etc.)
  required: boolean;     // Whether the field is mandatory
  element?: 'select';    // (Optional) UI element type; currently only supports 'select'
  options?: {            // (Optional) Options for a 'select' dropdown field
    value: string;       // Option value
    label: string;       // Option label shown to the user
  }[];
};

/**
 * Represents a grouped set of fields for a service message form.
 */
interface SendServiceMessage {
  name: string;
  list: FieldType[];
  signList?:FieldType[];
}


const menuList:SendServiceMessage[]= [
  {
    name:"connectCocoPay",//Used to connect CocoPay wallet and external wallets.
    list:[
      {label:"chainList",value:"ETH,BSC",type:"Array",required:true},
      {label:"walletSupports",value:"WalletConnect,TokenPocket",type:"Array",required:false}
    ]
  },
  {
    name: "getSafeAreaInsets",// Get the safe area insets (top and bottom) of a mobile device
    list: []
  },
  {
    name: "getLanguage",// Get the current language setting of CocoCat
    list: [

    ]
  },
  {
    name: "openURL",// Open a specified third-party URL. Only HTTPS links are allowed for security.
    list: [
      { label: 'url', value: '', type: 'string',required:true },
      { label: 'useSystemOpen', value: '', type: 'boolean',required:false },
      
    ]
  },
  {
    name: "scanQRCode",// Launch the QR code scanning feature
    list: [
      
    ]
  },
  {
    name: "copyToClipboard",// Copy text to clipboard
    list: [
      { label: 'text', value: '', type: 'string',required:true },
      
    ]
  },
  {
    name: "saveImage",// Save image to photo album; image size must be under 1MB
    list: [
      { label: 'image', value: '', type: 'string',required:true },
    ]
  },
  {
      name: "getAccount",// Get the account address under this RelayAPP to ensure each user has a unique identity
      list: [
        { label: 'type', value: '', type: 'Int',required:false },
      ]
  },
  {
      name: "setExtendedData",// Store extended data for the RelayAPP, with up to 1MB of storage per app
      list: [
        { label: 'extend', value: '', type: 'object',required:true },
      ]
  },
  {
      name: "getExtendedData",// Retrieve extended data stored by the RelayAPP
      list: [
       
      ]
  },
  {
      name: "generateSignature",//Generate an ECDSA digital signature for the specified text message
      list: [
         {label:"message", value:"",type:"string",required:true}
      ]
  },

  {
      name: "verifySignature",// Verify the validity of a digital signature generated by the `generateSignature` method
      list: [
         {label:"message", value:"",type:"string",required:true},
         {label:"signature", value:"",type:"string",required:true}
      ]
  },
  {
      name: "encrypt",// Encrypt text messages using Elliptic Curve Integrated Encryption Scheme (ECIES)
      list: [
         {label:"message", value:"",type:"string",required:true}
      ]
  },
  {
      name: "decrypt",// Decrypt text encrypted with the `encrypt` method, ensuring data security and reversibility
      list: [
        {label:"content", value:"",type:"string",required:true}
      ]
  },
  {
      name: "registerService",// Register the self-service for the RelayAPP
      list: [
        {label:"serviceKey", value:serviceKey,type:"string",required:true},
       
      ],
      signList:[
         {label:"content", value:"",type:"string",required:true},
        {label:"signature", value:"",type:"string",required:true},
      ]
     
  },
  {
      name: "checkServiceStatus",// Check the status of the registered self-service
      list: [
      ],
      signList:[
         {label:"content", value:"",type:"string",required:true},
        {label:"signature", value:"",type:"string",required:true},
      ]
  },
  {
      name:  "sendServiceMessage",// Send self-service messages via P2P communication for service calls and data transfer
      list: [
        {label:"type", value:"HTTP",type:"string",required:true,element:'select',options:[{ value: 'HTTP', label: 'HTTP' }]},
        {label:"content", value:'{"method": "POST","url": "/data","headers": {"Content-Type": "application/json"},"data": {}}',type:"string",required:true},
      
      ],
      signList:[
        {label:"content", value:"",type:"string",required:true},
        {label:"signature", value:"",type:"string",required:true},
      ]
  },
  
];

export default menuList